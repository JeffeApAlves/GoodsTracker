/*
 * consumer.c
 *
 *  Created on: Sep 24, 2017
 *      Author: Jefferson
 */

#include "Tank.h"
#include "Clock.h"
#include "Accelerometer.h"
#include "gps.h"
#include "application.h"
#include "ihm.h"
#include "consumer.h"

void updateDataGPS(Telemetria* tlm) {

	if (xQueueReceive(xQueueGPS, &tlm->gps, (TickType_t ) 1)) {

		// Configura o relógio através do GPS somente após indicar dados OK
		if(tlm->gps.FixQuality>0){
			adjusteClock(tlm->gps.Date,tlm->gps.Time_UTC);
		}
	}
}
//-------------------------------------------------------------------------

void updateDataAcce(Telemetria* tlm) {

	if (xQueueReceive(xQueueAcc, &tlm->accelerometer, (TickType_t ) 1)) {

	}
}
//-------------------------------------------------------------------------

void updateDataLevel(Telemetria* tlm) {

	if (xQueueReceive(xQueueTank, &tlm->tank, (TickType_t ) 1)) {

	}
}
//-------------------------------------------------------------------------

/**
 *
 * Atualiza as informções de telemetria que estão na lista de menssagens
 *
 */
void updateTLM(Telemetria* tlm,uint32_t ulNotifiedValue){

	if(ulNotifiedValue & BIT_UPDATE_GPS){

		updateDataGPS(tlm);
	}

	if(ulNotifiedValue & BIT_UPDATE_ACCE){

		updateDataAcce(tlm);

		// Notifica o ihm para atualizar o display com os dados do acelerometro
		ihm_update(SCREEN_ACCE,BIT_UPDATE_LCD_XYZ);
	}

	if(ulNotifiedValue & BIT_UPDATE_TANK){

		updateDataLevel(tlm);
	}
}
//-------------------------------------------------------------------------


