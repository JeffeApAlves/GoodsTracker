/*
 * DataTLM.c
 *
 *  Created on: 01/07/2017
 *      Author: Jefferson
 */
#include <string.h>
#include "Accelerometer.h"
#include "AppQueues.h"
#include "DataTLM.h"

DataTLM		dataTLM;

/**
 *
 * Atualiza a s informcoes de telemetria que estao na lista de menssagem xQueueDataTLM
 *
 */
void updateTLM(uint32_t ulNotifiedValue){

	if(ulNotifiedValue & BIT_UPDATE_GPS){

		updateDataGPS();
	}

	if(ulNotifiedValue & BIT_UPDATE_ACCE){

		updateDataAcce();
	}

	if(ulNotifiedValue & BIT_UPDATE_AD){

		updateDataLevel();
	}
}
//-------------------------------------------------------------------------

void updateDataGPS(void) {

	if (xQueueGPS != 0) {

		DataGPS* data;

		if (xQueueReceive(xQueueGPS, &(data), (TickType_t ) 1)) {

			dataTLM.Lat = data->Lat;
			dataTLM.Lng = data->Lng;
			strcpy(dataTLM.Date, data->Date);
			strcpy(dataTLM.Time, data->Time);
			dataTLM.Speed	= data->Speed;
		}
	}
}
//-------------------------------------------------------------------------

void updateDataAcce(void) {

	if (xQueueAcc != 0) {

		DataAccelerometer* data;

		if (xQueueReceive(xQueueAcc, &(data), (TickType_t ) 1)) {

			memcpy(dataTLM.Axis,data->Axis,sizeof(dataTLM.Axis));
			memcpy(dataTLM.G,data->G,sizeof(dataTLM.G));
		}
	}
}
//-------------------------------------------------------------------------

void updateDataLevel(void) {

	if (xQueueTank != 0) {

		DataTank* data;

		if (xQueueReceive(xQueueTank, &(data), (TickType_t ) 1)) {

			memcpy(dataTLM.Axis,data->Axis,sizeof(dataTLM.Axis));

			dataTLM.Tank  = *data;
		}
	}
}
//-------------------------------------------------------------------------
