
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/

/* Begin of <includes> initialization, DO NOT MODIFY LINES BELOW */

#include "GT_TSK.h"
#include "GT_FRTOS.h"
#include "frtos_tasks.h"

/* End <includes> initialization, DO NOT MODIFY LINES ABOVE */


#include "ihm.h"

static portTASK_FUNCTION(mains_taskTask, pvParameters) {

  /* Write your task initialization code here ... */

  for(;;) {

	  vTaskDelay(1000/portTICK_RATE_MS);
  }
  /* Destroy the task */
  vTaskDelete(mains_taskTask);
}

static portTASK_FUNCTION(communication_taskTask, pvParameters) {

  /* Write your task initialization code here ... */

  for(;;) {

	  vTaskDelay(1000/portTICK_RATE_MS);
  }
  /* Destroy the task */
  vTaskDelete(communication_taskTask);
}

static portTASK_FUNCTION(data_taskTask, pvParameters) {

  /* Write your task initialization code here ... */

  for(;;) {

	  vTaskDelay(1000/portTICK_RATE_MS);
  }
  /* Destroy the task */
  vTaskDelete(data_taskTask);
}

static portTASK_FUNCTION(IHM_taskTask, pvParameters) {

  initialize_ihm();

  for(;;) {

	  loop_ihm();

	  vTaskDelay(1000/portTICK_RATE_MS);
  }

  terminate_ihm();
  /* Destroy the task */
  vTaskDelete(IHM_taskTask);
}

void CreateTasks(void) {
  if (GT_FRTOS_xTaskCreate(
     mains_taskTask,  /* pointer to the task */
      "mains_task", /* task name for kernel awareness debugging */
      configMINIMAL_STACK_SIZE + 0, /* task stack size */
      (void*)NULL, /* optional task startup argument */
      tskIDLE_PRIORITY + 0,  /* initial priority */
      (xTaskHandle*)NULL /* optional task handle to create */
    ) != pdPASS) {
      /*lint -e527 */
      for(;;){}; /* error! probably out of memory */
      /*lint +e527 */
  }
  if (GT_FRTOS_xTaskCreate(
     communication_taskTask,  /* pointer to the task */
      "communication_task", /* task name for kernel awareness debugging */
      configMINIMAL_STACK_SIZE + 0, /* task stack size */
      (void*)NULL, /* optional task startup argument */
      tskIDLE_PRIORITY + 0,  /* initial priority */
      (xTaskHandle*)NULL /* optional task handle to create */
    ) != pdPASS) {
      /*lint -e527 */
      for(;;){}; /* error! probably out of memory */
      /*lint +e527 */
  }
  if (GT_FRTOS_xTaskCreate(
     data_taskTask,  /* pointer to the task */
      "data_task", /* task name for kernel awareness debugging */
      configMINIMAL_STACK_SIZE + 0, /* task stack size */
      (void*)NULL, /* optional task startup argument */
      tskIDLE_PRIORITY + 0,  /* initial priority */
      (xTaskHandle*)NULL /* optional task handle to create */
    ) != pdPASS) {
      /*lint -e527 */
      for(;;){}; /* error! probably out of memory */
      /*lint +e527 */
  }
  if (GT_FRTOS_xTaskCreate(
     IHM_taskTask,  /* pointer to the task */
      "IHM_task", /* task name for kernel awareness debugging */
      configMINIMAL_STACK_SIZE + 0, /* task stack size */
      (void*)NULL, /* optional task startup argument */
      tskIDLE_PRIORITY + 0,  /* initial priority */
      (xTaskHandle*)NULL /* optional task handle to create */
    ) != pdPASS) {
      /*lint -e527 */
      for(;;){}; /* error! probably out of memory */
      /*lint +e527 */
  }
}

